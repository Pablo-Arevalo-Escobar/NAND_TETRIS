// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    Mux(a=false,b=true,sel=load,out=write);
	DMux8Way(in = write, sel=address[9..11], a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
	
	RAM512(in =in , load=r0 , address=address[0..8], out=r0Val);
	RAM512(in =in , load=r1 , address=address[0..8], out=r1Val);
	RAM512(in =in , load=r2 , address=address[0..8], out=r2Val);
	RAM512(in =in , load=r3 , address=address[0..8], out=r3Val);
	RAM512(in =in , load=r4 , address=address[0..8], out=r4Val);
	RAM512(in =in , load=r5 , address=address[0..8], out=r5Val);
	RAM512(in =in , load=r6 , address=address[0..8], out=r6Val);
	RAM512(in =in , load=r7 , address=address[0..8], out=r7Val);

	Mux8Way16(a=r0Val,b=r1Val,c=r2Val,d=r3Val,e=r4Val,f=r5Val,g=r6Val,h=r7Val,sel=address[9..11],out=out);

}