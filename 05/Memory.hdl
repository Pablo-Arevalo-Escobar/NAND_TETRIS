// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */
 
 
 // 11 -> keyboard 
	// Need to verify that the rest of the string is empty !!! 
// 10 -> screen
// 00 -> 16k Memory Map

//0x6000  0 110000000000000
//0x5FFF  0 101111111111111
//0x4000  0 100000000000000



CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	Mux(a=false,b=true,sel=load,out=write);
	
	//A standard DMux can be used instead as we are only concerned about writing to the screen or the memory 
	DMux4Way(in=write,sel=address[13..14],a=memLoad1,b=memLoad2,c=screenLoad,d=keyNotUsed);
	Or(a=memLoad1,b=memLoad2, out = memLoad);
	
	Keyboard(out = keyPress);
	Or8Way(in = address[0..7], out = keyZeros1);
	Or8Way(in = address[5..12], out = keyZeros2);
	Or(a=keyZeros1, b=keyZeros2, out = keyZero);
	Not(in = keyZero, out = keyZeroOut);
	Mux16(a=false,b=true,sel=keyZeroOut, out = bOutputKey);
	And16(a=keyPress,b=bOutputKey, out = keyOut);
	
	RAM16K(in =in, load=memLoad, address = address[0..13], out = ramOut);
	Screen(in = in, address = address[0..12], load = screenLoad, out = screenOut);
	
	Mux4Way16(a=ramOut,b=ramOut,c=screenOut,d=keyOut,sel=address[13..14],out=out);

	
}